---
import { stegaClean } from '@sanity/client/stega';

import { getSettings } from '@app/lib/sanity/queries/settings';

const { data: settings } = await getSettings();

const hashPassword = (s: string) =>
  String(s.split('').reduce((a, b) => ((a << 5) - a + b.charCodeAt(0)) | 0, 0));
---

<script
  is:inline
  data-password={settings?.password &&
    hashPassword(hashPassword(stegaClean(settings.password)))}
  data-hash-function={hashPassword.toString()}
>
  (function () {
    const currentScript = document.currentScript;

    const hashPassword = eval(currentScript.getAttribute('data-hash-function'));

    const password =
      (currentScript && currentScript.getAttribute('data-password')) ||
      undefined;
    const locationPassword = window.location.hash.match(/^#password=(.*?)\s*$/);
    let localPassword = localStorage.getItem('password') || undefined;

    if (locationPassword) {
      localPassword = hashPassword(locationPassword[1]);
      localStorage.setItem('password', localPassword);
      history.replaceState(
        '',
        document.title,
        window.location.pathname + window.location.search
      );
    }

    window.sanityLocked = {
      hashPassword,
      password,
      localPassword,
      locked: Boolean(
        !localPassword || hashPassword(localPassword) !== password
      ),
      checkPrevious: () => {
        if (
          !window.sanityLocked.locked &&
          document.currentScript &&
          document.currentScript.previousElementSibling
        )
          document.currentScript.previousElementSibling.removeAttribute(
            'hidden'
          );
      },
    };
  })();
</script>
